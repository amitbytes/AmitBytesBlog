#pragma checksum "D:\projects\AmitBytesBlog\src\AmitBytesBlog\AmitBytesBlog.Web\Views\Root\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "090d365e56fbe59ef6ce780bf342a4104be62089"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Root_Index), @"mvc.1.0.view", @"/Views/Root/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Root/Index.cshtml", typeof(AspNetCore.Views_Root_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\projects\AmitBytesBlog\src\AmitBytesBlog\AmitBytesBlog.Web\Views\_ViewImports.cshtml"
using AmitBytesBlog.Web;

#line default
#line hidden
#line 2 "D:\projects\AmitBytesBlog\src\AmitBytesBlog\AmitBytesBlog.Web\Views\_ViewImports.cshtml"
using AmitBytesBlog.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"090d365e56fbe59ef6ce780bf342a4104be62089", @"/Views/Root/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d810c841a037d009e8b1a65964478c8573214cd7", @"/Views/_ViewImports.cshtml")]
    public class Views_Root_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\projects\AmitBytesBlog\src\AmitBytesBlog\AmitBytesBlog.Web\Views\Root\Index.cshtml"
  
    ViewData["Title"] = "Amit Bytes";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(93, 10874, true);
            WriteLiteral(@"
<!--Pager-->
<ul class=""pagination"">
    <li class=""page-item"">
        <a class=""page-link"" href=""#"" aria-label=""Previous"">
            <span aria-hidden=""true"">&laquo;</span>
            <span class=""sr-only"">First</span>
        </a>
    </li>
    <li class=""page-item"">
        <a class=""page-link"" href=""#"" aria-label=""Previous"">
            <span aria-hidden=""true"">&#8249;</span>
            <span class=""sr-only"">Previous</span>
        </a>
    </li>
    <li class=""page-item active""><a class=""page-link"" href=""#"">1</a></li>
    <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
    <li class=""page-item"">
        <a class=""page-link"" href=""#"" aria-label=""Next"">
            <span aria-hidden=""true"">&#8250;</span>
            <span class=""sr-only"">Next</span>
        </a>
    </li>
    <li class=""page-item"">
        <a class=""page-link"" href=""#"" aria-label=""Next"">
            <span aria-hidden=""true"">&ra");
            WriteLiteral(@"quo;</span>
            <span class=""sr-only"">Last</span>
        </a>
    </li>
</ul>

<!--Posts-->

<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""/2019/07/12/AspNet_core_forms_authentication"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
      ");
            WriteLiteral(@"  </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""/2019/07/12/AspNet_core_forms_authentication"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        ");
            WriteLiteral(@"<a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
 ");
            WriteLiteral(@"   </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div c");
            WriteLiteral(@"lass=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""");
            WriteLiteral(@"#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a>");
            WriteLiteral(@"</h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=");
            WriteLiteral(@"""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""f");
            WriteLiteral(@"a fa-edit""></i> Amit Singh
            <i class=""fa fa-comments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>
<div class=""card mt-1 post"">
    <div class=""card-body"">
        <h2 class=""post-title""><a href=""#"" class=""text-danger"">AspNet Core Forms Authentication</a></h2>
        <p class=""post-meta"">
            <i class=""fa fa-calendar""></i> 04-July-2019
            <i class=""fa fa-edit""></i> Amit Singh
            <i class=""fa fa-com");
            WriteLiteral(@"ments""></i> 2
            <i class=""fa fa-tags""></i> AspNet Core
        </p>
        <p class=""post-content"">
            ASP.NET Core is as very rich cross-platform web application development
            framework that allows us to build an application that runs on Windows, MAC,
            and Linux. In this blog post, we will see how we can implement Cookie-based
            Authentication without AspNetCore Identity Framework.  Let's see steps required
            to implement this with below trivial example:
        </p>
        <a href=""#"" class=""btn bg-danger post-btn"">Read More</a>
    </div>
</div>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
